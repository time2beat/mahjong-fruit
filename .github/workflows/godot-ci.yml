name: "godot-ci-export"

on:
  push:
    branches:
      - main

env:
  GODOT_VERSION: 3.4.4
  EXPORT_NAME: mahjong-fruit

jobs:
  export-windows:
    name: Windows Export
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:3.4.4
    steps:
      - name: 1. Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: 2. Setup
        run: |
          mkdir -v -p ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/templates/${GODOT_VERSION}.stable
      - name: 3. Windows Build
        run: |
          mkdir -v -p build/windows
          cd $EXPORT_NAME
          godot -v --export "Windows Desktop" ../build/windows/$EXPORT_NAME.exe
      - name: 4. Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: windows
          path: build/windows

  export-linux:
    name: Linux Export
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:3.4.4
    steps:
      - name: 1. Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: 2. Setup
        run: |
          mkdir -v -p ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/templates/${GODOT_VERSION}.stable
      - name: 3. Linux Build
        run: |
          mkdir -v -p build/linux
          cd $EXPORT_NAME
          godot -v --export "Linux/X11" ../build/linux/$EXPORT_NAME.x86_64
      - name: 4. Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: linux
          path: build/linux

  export-web:
    name: Web Export
    runs-on: ubuntu-20.04
    container:
      image: barichello/godot-ci:3.4.4
    steps:
      - name: 1. Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: 2. Setup
        run: |
          mkdir -v -p ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/templates/${GODOT_VERSION}.stable
      - name: 3. Web Build
        run: |
          mkdir -v -p build/web
          cd $EXPORT_NAME
          godot -v --export "HTML5" ../build/web/index.html
      - name: 4. Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: web
          path: build/web
      - name: 4. Install rsync ðŸ“š
        run: |
          apt-get update && apt-get install -y rsync
      - name: 5. Deploy to GitHub Pages ðŸš€
        uses: JamesIves/github-pages-deploy-action@releases/v4
        with:
          branch: dist
          folder: build/web
      # - name: 5. Deploy to Distribution Branch ðŸš€
      #   uses: peaceiris/actions-gh-pages@v3
      #   with:
      #     deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
      #     publish_dir: ./build/web
      #     publish_branch: dist
      #     user_name: "github-actions[bot]"
      #     user_email: "github-actions[bot]@users.noreply.github.com"
      #     commit_message: ${{ github.event.head_commit.message }}

  # export-mac:
  #   name: Mac Export
  #   runs-on: ubuntu-20.04
  #   container:
  #     image: barichello/godot-ci:3.4.4
  #   steps:
  #     - name: 1. Checkout
  #       uses: actions/checkout@v2
  #       with:
  #         lfs: true
  #     - name: 2. Setup
  #       run: |
  #         mkdir -v -p ~/.local/share/godot/templates
  #         mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/templates/${GODOT_VERSION}.stable
  #     - name: 3. Mac Build
  #       run: |
  #         mkdir -v -p build/mac
  #         cd $EXPORT_NAME
  #         godot -v --export "Mac OSX" ../build/mac/$EXPORT_NAME.zip
  #     - name: 4. Upload Artifact
  #       uses: actions/upload-artifact@v1
  #       with:
  #         name: mac
  #         path: build/mac
